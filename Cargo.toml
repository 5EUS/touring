[workspace]
members = ["."]

# Workspace-level build optimizations
[workspace.dependencies]
# Share common dependencies across workspace members
serde = { version = "1.0", features = ["derive"] }
anyhow = "1.0"
tokio = { version = "1", features = ["rt-multi-thread", "macros", "fs", "io-util"] }

[package]
name = "touring"
version = "0.1.0"
edition = "2021"
description = "A media aggregation library with plugin support via WebAssembly"
license = "MIT OR Apache-2.0"
repository = "https://github.com/5EUS/touring"
homepage = "https://github.com/5EUS/touring"
documentation = "https://docs.rs/touring"
readme = "README.md"
keywords = ["media", "manga", "anime", "webassembly", "plugins"]
categories = ["multimedia", "web-programming", "wasm"]

# Exclude build artifacts and temporary files
exclude = [
    "target/",
    "plugins/*.wasm",
    ".git/",
    ".DS_Store"
]

[dependencies]
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
# WebAssembly runtime - consider if all features are needed
wasmtime = { version = "36.0.0", features = ["component-model"] }
wasmtime-wasi = { version = "36.0.0" }
wasmtime-wasi-http = { version = "36.0.0" }
wit-bindgen = "0.45"
wit-component = "0.238"
# Tokio - Only essential features
tokio = { version = "1", features = ["rt-multi-thread", "macros", "fs", "io-util"] }
anyhow = "1.0"
clap = { version = "4.0", features = ["derive"] }
# Database - Keep 'any' since your code depends on it, but optimize others
sqlx = { version = "0.7", default-features = false, features = ["runtime-tokio", "macros", "migrate", "any", "sqlite"] }
# Consider refactoring to remove 'any' dependency for better build times
# Alternative: use specific database types instead of AnyPool
directories = "5"
url = "2"
async-trait = "0.1"
uuid = { version = "1", features = ["v4"] }
toml = "0.8"
# Downloads - Minimal feature set
reqwest = { version = "0.12", default-features = false, features = ["rustls-tls", "stream", "json"] }
zip = { version = "0.6", default-features = false, features = ["deflate"] }

# Optional: faster builds for development
[profile.dev]
# Faster compilation at the cost of runtime performance
opt-level = 0
debug = true
# Use fewer codegen units for faster linking
codegen-units = 256
# Don't optimize dependencies in debug mode  
[profile.dev.package."*"]
opt-level = 0

[build-dependencies]
wit-bindgen = "0.45"
